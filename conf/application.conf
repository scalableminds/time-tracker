include "github.conf"

# This is the main configuration file for the application.
# ~~~~~
host.url="http://localhost:9000"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="=p]MW5:M11`9TNli9l`h:B8lQIs9cOX5;2K^r]eeaY@6NBfXG[B2s38iAwN3nH8:"

# The application languages
# ~~~~~
application.langs="en"

application.enableAutoLogin=true

application.github{
  userRepositoryUpdateIntervalInMinutes=5
}

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
mongodb.db="time-tracker"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

authentication {
  #
  # Where to redirect the user if SecureSocial can't figure that out from
  # the request that was received before authenticating the user
  #
  onLoginGoTo=/

  #
  # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
  #
  onLogoutGoTo=/

  #
  # Enable SSL
  #
  ssl=false

  sessionTimeOut=60000

  #
  # The controller class for assets. This is optional, only required
  # when you use a custom class for Assets.
  #
  # assetsController=controllers.ReverseMyCustomAssetsController

  cookie {
    #name=id
    #path=/
    #domain=some_domain
    #httpOnly=true

    idleTimeoutInMinutes=30000
    absoluteTimeoutInMinutes=172000
  }

  github {
    authorizationUrl="https://github.com/login/oauth/authorize"
    accessTokenUrl="https://github.com/login/oauth/access_token"

    scope="repo"
  }
}

play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"