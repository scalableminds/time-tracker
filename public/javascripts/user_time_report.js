// Generated by CoffeeScript 1.6.2
define(["moment"], function() {
  var UserTimeReport, data;

  data = {
    "user": "tmbo",
    "projects": {
      "brainflight": [
        {
          "issueNumber": 0,
          "time": 10,
          "title": "BF-101 Build time tracker",
          "date": "2013-08-01T00:08:59.181Z"
        }, {
          "issueNumber": 2,
          "time": 60,
          "title": "BF-12 Work some more!",
          "date": "2013-08-12T00:08:59.181Z"
        }
      ],
      "oxalis": [
        {
          "issueNumber": 4,
          "time": 10,
          "title": "OX-1 satisfy Moritz",
          "date": "2013-08-30T00:08:59.181Z"
        }, {
          "issueNumber": 12,
          "time": 60,
          "title": "OX-1000 sell Oxalis",
          "date": "2013-08-10T00:08:59.181Z"
        }
      ]
    }
  };
  return UserTimeReport = (function() {
    function UserTimeReport() {
      $("#main-container").removeClass("container");
      this.currentDate = moment();
      this.setupUI();
      this.loadData();
    }

    UserTimeReport.prototype.setupUI = function() {
      var _this = this;

      $("#user").text("" + data.user);
      $("#date_back").on("click", function() {
        _this.currentDate.subtract("months", 1);
        return _this.loadData();
      });
      return $("#date_forward").on("click", function() {
        _this.currentDate.add("months", 1);
        return _this.loadData();
      });
    };

    UserTimeReport.prototype.loadData = function() {
      $("#date").text("" + (this.currentDate.format('MMMM YYYY')));
      this.lastDay = this.currentDate.endOf("month").date();
      this.calcSums();
      $("#timetable thead").empty();
      $("#timetable tbody").empty();
      this.printHeader();
      return this.printTimeTable();
    };

    UserTimeReport.prototype.printHeader = function() {
      var $header, day, header, _i, _ref;

      header = [];
      header.push("Key");
      header.push("Summary");
      header.push("&sum;");
      for (day = _i = 1, _ref = this.lastDay; 1 <= _ref ? _i <= _ref : _i >= _ref; day = 1 <= _ref ? ++_i : --_i) {
        header.push(this.padNumber(day));
      }
      $header = $("<tr>");
      header.forEach(function(h) {
        return $header.append("<th>" + h + "</th>");
      });
      return $("#timetable thead").append($header);
    };

    UserTimeReport.prototype.printTimeTable = function() {
      var $project, day, issues, project, _i, _ref, _ref1;

      _ref = data.projects;
      for (project in _ref) {
        issues = _ref[project];
        $project = $("<tr>", {
          "class": "project"
        });
        $project.append("<td>");
        $project.append("<td>" + project + "</td>");
        $project.append("<td>");
        for (day = _i = 1, _ref1 = this.lastDay; 1 <= _ref1 ? _i <= _ref1 : _i >= _ref1; day = 1 <= _ref1 ? ++_i : --_i) {
          $project.append("<td>");
        }
        $("#timetable tbody").append($project);
        this.printIssues(issues);
      }
      return this.printSumByDay();
    };

    UserTimeReport.prototype.printIssues = function(issues) {
      var $issue, day, issue, _i, _j, _len, _ref, _results;

      _results = [];
      for (_i = 0, _len = issues.length; _i < _len; _i++) {
        issue = issues[_i];
        $issue = $("<tr>");
        $issue.append("<td>" + issue.issueNumber + "</td>");
        $issue.append("<td>" + issue.title + "</td>");
        $issue.append($("<td>", {
          "class": "sumByIssue",
          text: "" + this.sumByIssue[issue.issueNumber]
        }));
        for (day = _j = 1, _ref = this.lastDay; 1 <= _ref ? _j <= _ref : _j >= _ref; day = 1 <= _ref ? ++_j : --_j) {
          if (day === moment(issue.date).date()) {
            $issue.append($("<td>", {
              text: "" + [issue.time],
              "class": "edit-time",
              "data-issueNumber": issue.issueNumber
            }));
          } else {
            $issue.append($("<td>", {
              "class": "edit-time"
            }));
          }
        }
        _results.push($("#timetable tbody").append($issue));
      }
      return _results;
    };

    UserTimeReport.prototype.printSumByDay = function() {
      var $issue, $tbody, day, sum, _i, _ref;

      $tbody = $("<tbody>");
      $issue = $("<tr>", {
        "class": "warning"
      });
      $issue.append("<td></td>");
      $issue.append("<td>&sum;</td>");
      $issue.append($("<td>", {
        "class": "sumByIssue",
        text: "" + this.sumOverall
      }));
      for (day = _i = 1, _ref = this.lastDay; 1 <= _ref ? _i <= _ref : _i >= _ref; day = 1 <= _ref ? ++_i : --_i) {
        sum = this.sumByDay[day] || Â String("");
        $issue.append("<td>" + sum + "</td>");
      }
      $("#timetable tbody").append($issue);
      return this.initPopup();
    };

    UserTimeReport.prototype.calcSums = function() {
      var issue, project, sumByDay, sumByIssue, sumByProject, sumOverall, _ref;

      sumByIssue = {};
      sumByDay = {};
      sumByProject = {};
      sumOverall = 0;
      _ref = data.projects;
      for (project in _ref) {
        issue = _ref[project];
        issue.forEach(function(issue) {
          var day;

          sumByIssue[issue.issueNumber] = sumByIssue[issue.issueNumber] + issue.time || issue.time;
          sumByProject[project] = sumByProject[project] + issue.time || issue.time;
          day = moment(issue.date).date();
          sumByDay[day] = sumByDay[day] + issue.time || issue.time;
          return sumOverall += issue.time;
        });
      }
      this.sumByIssue = sumByIssue;
      this.sumByDay = sumByDay;
      this.sumByProject = sumByProject;
      return this.sumOverall = sumOverall;
    };

    UserTimeReport.prototype.initPopup = function() {
      var $popup;

      $popup = $("#popup");
      $popup.on("click", function(evt) {
        return $popup.hide();
      });
      $("body").on("click", function(evt) {
        return $popup.hide();
      });
      return $(".edit-time").on("click", function(evt) {
        var $el, issueNumber, value, width;

        evt.stopPropagation();
        $el = $(evt.target);
        width = $el.width();
        value = $el.text();
        issueNumber = $el.data("issueNumber");
        return $popup.toggle();
      });
    };

    UserTimeReport.prototype.padNumber = function(number) {
      return String("0" + number).slice(-2);
    };

    return UserTimeReport;

  })();
});
